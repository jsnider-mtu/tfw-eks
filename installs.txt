ToDo:
-----
velero
kyverno?

kubectl apply -f https://github.com/aws/aws-node-termination-handler/releases/download/v1.14.0/all-resources.yaml
helm install autoscaler autoscaler/cluster-autoscaler -n autoscaler --set autoDiscovery.clusterName=liberland --set awsRegion=us-east-1 --set rbac.serviceAccount.annotations."eks\.amazonaws\.com/role-arn"=arn:aws:iam::556005419303:role/autoscaler-role --set rbac.serviceAccount.name=autoscaler-sa --set extraArgs.expander=random --set extraArgs.balance-similar-node-groups="true" --set extraArgs.skip-nodes-with-system-pods="false" --set nodeSelector.lifecycle=ondemand
kubectl apply -f awslbcontrollersa.yaml; helm install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName=liberland --set serviceAccount.create=false --set serviceAccount.name=aws-load-balancer-controller --set nodeSelector.lifecycle=ondemand
helm install ingress-nginx ingress-nginx/ingress-nginx -n ingress-nginx --set controller.nodeSelector.lifecycle=ondemand --set defaultBackend.nodeSelector.lifecycle=ondemand --set controller.admissionWebhooks.patch.nodeSelector.lifecycle=ondemand

  kubectl create -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/docs/examples/http-svc.yaml
  kubectl apply -f test-ingress.yaml

helm install efs-csi-driver aws-efs-csi-driver/aws-efs-csi-driver -n kube-system --set controller.nodeSelector.lifecycle=ondemand --set controller.serviceAccount.name=efs-csi-driver-sa --set controller.serviceAccount.annotations."eks\.amazonaws\.com/role-arn"=arn:aws:iam::556005419303:role/efs-csi-driver-role --set node.nodeSelector.lifecycle=ondemand --set storageClasses[0].name=efs-sc --set storageClasses[0].annotations."storageclass\.kubernetes\.io/is-default-class"=\"true\" --set storageClasses[0].mountOptions[0]=tls --set storageClasses[0].parameters.provisioningMode=efs-ap --set storageClasses[0].parameters.fileSystemId=fs-050ad1827cfe0d4bc --set storageClasses[0].parameters.directoryPerms=\"700\" --set storageClasses[0].parameters.gidRangeStart=\"1000\" --set storageClasses[0].parameters.gidRangeEnd=\"2000\" --set storageClasses[0].parameters.basePath=\"/dynamic_provisioning\" --set storageClasses[0].reclaimPolicy=Retain --set storageClasses[0].volumeBindingMode=Immediate
